<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">TrackYourDay.Web</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="activities">
                <span class="oi oi-plus" aria-hidden="true"></span> Activities
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="breaks">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Breaks
            </NavLink>
        </div>

        <a href="https://github.com/skuty/TrackYourDay/issues/new">
            <MudButton Variant="Variant.Outlined" Size="Size.Small" Color="Color.Secondary">Submit Bug or Feature Request</MudButton>
        </a>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="settings">
                <span class="icon-[icon-park-outline--config]"></span>
                <span class="oi oi-list-rich" aria-hidden="true"></span> Settings
            </NavLink>
        </div>

        <MudButton Variant="Variant.Outlined" Size="Size.Small" Color="Color.Primary" OnClick="CloseApplication">  Close the Application totally  </MudButton>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    [Inject] private IDialogService DialogService { get; set; }


    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async void CloseApplication()
    {
        bool? result = await DialogService.ShowMessageBox(
            "Closing application",
            "Do You really want to Close Application?",
            yesText: "Close!", cancelText: "Cancel");
        string state = result == null ? "Canceled" : "Close!";

        if (state == "Close!")
        {
            System.Diagnostics.Process.GetCurrentProcess().Kill();
        }
    }
}
